buildscript {
    ext {
        kotlinVersion = '1.2.20'
		springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "kotlin-noarg"
apply plugin: 'io.spring.dependency-management'

noArg {
    annotation("com.seko0716.springboot.starter.oauth2.social.infrastructure.annotations.NoArgs")
}

group = 'com.seko0716'
version = '0.1.8-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

//bootRepackage {
//    enabled = false
//}

dependencies {
    compile('javax.servlet:javax.servlet-api:3.0.1')
//    compile('org.springframework.security.oauth:spring-security-oauth2:2.2.1.RELEASE')
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE')

    compile('org.springframework.boot:spring-boot-autoconfigure')
    compile('org.springframework.data:spring-data-commons')
    compile('org.mongodb:bson:3.5.0')
    compile('javax.persistence:javax.persistence-api:2.2')

    compile('org.springframework.boot:spring-boot-starter')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')

    compileOnly('org.springframework.boot:spring-boot-starter-data-jpa')
    compileOnly('org.springframework.boot:spring-boot-starter-data-mongodb')

//    test
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.boot:spring-boot-starter-data-jpa')
//    testCompile('org.springframework.boot:spring-boot-starter-data-mongodb')
    testCompile('com.h2database:h2')
    testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}
